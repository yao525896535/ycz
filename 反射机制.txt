JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；
    对于任意一个对象，都能够调用它的任意一个方法和属性；
    这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。

JAVA反射（放射）机制：“程序运行时，允许改变程序结构或变量类型，这种语言称为动态语言”。

Java反射机制主要提供了以下功能： 
1、在运行时判断任意一个对象所属的类；
2、在运行时构造任意一个类的对象；
3、在运行时判断任意一个类所具有的成员变量和方法；
4、在运行时调用任意一个对象的方法；生成动态代理。

(在运行时通过字符串才得知要运行的类，即在一开始并不知道要初始化的类对象是什么，自然也无法使用 new 关键字来创建对象了。
反射就是在运行时刻动态加载类，从反射中获得类对象，进而得到需要的类信息。)

怎么运用反射:
要获取类的信息，首先要获取类的类类型（类信息eg：类名、类方法、类成员变量、类构造函数等等）

1）获取类的成员变量的信息

成员变量也是对象，是java.lang.reflect.Field类的对象，Field类封装了关于成员变量的操作
getField()：获取的是所有的public的成员变量的信息
getDeclaredFields()：获取的是该类自己声明的成员变量的信息

2）获取类的构造函数的信息

打印对象的构造函数的信息，首先获取它的类类型，构造函数也是对象，java.lang.Constructor中封装了构造函数的信息
getConstructors：获取所有的public的构造函数。eg：Constructor[]  cs = c.getConstructors()；
getDeclaredConstructors：得到所有自己声明的构造函数。eg：constructor.getName()；

3）获取类的某个方法的信息

方法的名称和方法的参数列表才能唯一决定某个方法。要获取方法，就是获取类的信息，首先要获取类类型。方法也是对象。




























